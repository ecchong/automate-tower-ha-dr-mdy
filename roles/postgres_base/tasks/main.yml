- name: Find recovery.conf
  find:
    paths: /var/lib/pgsql
    recurse: yes
    patterns: recovery.conf
  register: recovery_conf_path

- name: Remove recovery.conf
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ recovery_conf_path.files }}"

#- name: import nginx role vars. TBD - only include specific vars file ??
#  import_role:
#    name: "{{tower_installer_current}}/roles/nginx"
#  vars:
#    nginx_exec_vars_only: true

- name: include vars normally in group vars all in the installer
  include_vars:
    file: "{{ tower_installer_current }}/group_vars/all"

- name: Setup RedHat/CentOS repos for pg installation
  import_role:
    name: "{{tower_installer_current}}/roles/repos_el"
  when: ansible_os_family == "RedHat"

- name: Install packages for RedHat/Centos skipping Tower
  import_role:
    name: "{{tower_installer_current}}/roles/packages_el"
  vars:
    packages_el_install_tower: false
    packages_el_install_postgres: true
  when: ansible_os_family == "RedHat"

- name: Install postgres and setup replication.
  import_role:
    name: "{{tower_installer_current}}/roles/postgres"
  vars:
    postgres_allowed_ipv4: "0.0.0.0/0"
    postgres_allowed_ipv6: "::/0"
    postgres_username: "{{ pg_username }}"
    postgres_password: "{{ pg_password }}"
    postgres_database: "{{ pg_database }}"
    max_postgres_connections: 1024
    postgres_shared_memory_size: "{{ (ansible_memtotal_mb*0.3)|int }}"
    postgres_work_mem: "{{ (ansible_memtotal_mb*0.03)|int }}"
    postgres_maintenance_work_mem: "{{ (ansible_memtotal_mb*0.04)|int }}"
  tags:
    - postgresql_database

- name: Setup firewall for postgres access
  import_role:
    name: "{{tower_installer_current}}/roles/firewall"
  vars:
    firewalld_http_port: "{{ nginx_http_port }}"
    firewalld_https_port: "{{ nginx_https_port }}"
  tags:
    - firewall
  when: ansible_os_family == 'RedHat'
